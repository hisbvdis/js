"use strict";

// БАЗОВЫЙ ПРИМЕР РАБОТЫ С ПРОМИСАМИ


// 1. Создать промис
let promise = new Promise((resolve, reject) => {
  // 1.1. В тело функции-исполнителя добавить асинхронный код

  // 1.2. В этом случае вызывается функция ВЫПОЛНЕНИЯ, в которую через аргумент
  // .... можно передать ЗНАЧЕНИЕ для обработчиков
  if (Math.random() > 0.5) {
    resolve("Успех исполнителя");
  }

  // 1.3. В этом случае вызывается функция ОТКЛОНЕНИЯ, в которую через аргумент
  // .... можно передать ОБЪЕКТ ОШИБКИ для обработчиков
  if (Math.random() < 0.5) {
    reject(new Error("Ошибка"));
  }
})


// 2. Назначить обработчики ВЫПОЛНЕНИЯ и ОТКЛОНЕНИЯ с помощью методов

// 2.1. Метод, который всегда выполняется сразу после завершения
// ... работы исполнителя и перед другими методами
promise.finally(
  console.log("Обработчик после исполнителя перед другими методами")
);

// 2.2. Метод, который обрабатывает успешный и ошибочный результат
promise.then(
  result => console.log(`Выполнено с сообщением "${result}"`),
  error => console.log(`Отклонено с сообщением "${error.message}"`)
);